# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import commands_pb2 as commands__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in commands_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CommandsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Heartbeat = channel.unary_unary(
                '/CommandsService/Heartbeat',
                request_serializer=commands__pb2.Void.SerializeToString,
                response_deserializer=commands__pb2.Void.FromString,
                _registered_method=True)
        self.GetCameraProtocols = channel.unary_unary(
                '/CommandsService/GetCameraProtocols',
                request_serializer=commands__pb2.Void.SerializeToString,
                response_deserializer=commands__pb2.SupportedStreamsReply.FromString,
                _registered_method=True)
        self.StartCamera = channel.unary_unary(
                '/CommandsService/StartCamera',
                request_serializer=commands__pb2.CamStreamStartRequest.SerializeToString,
                response_deserializer=commands__pb2.CamStreamPort.FromString,
                _registered_method=True)
        self.StopCamera = channel.unary_unary(
                '/CommandsService/StopCamera',
                request_serializer=commands__pb2.CamStreamPort.SerializeToString,
                response_deserializer=commands__pb2.Void.FromString,
                _registered_method=True)
        self.ResetUdp = channel.unary_unary(
                '/CommandsService/ResetUdp',
                request_serializer=commands__pb2.Void.SerializeToString,
                response_deserializer=commands__pb2.Void.FromString,
                _registered_method=True)
        self.GetGpsCoordinates = channel.unary_unary(
                '/CommandsService/GetGpsCoordinates',
                request_serializer=commands__pb2.Void.SerializeToString,
                response_deserializer=commands__pb2.GpsCoordinates.FromString,
                _registered_method=True)
        self.GetProcessorStatus = channel.unary_unary(
                '/CommandsService/GetProcessorStatus',
                request_serializer=commands__pb2.Void.SerializeToString,
                response_deserializer=commands__pb2.ProcessorData.FromString,
                _registered_method=True)
        self.GetBatteryStatus = channel.unary_unary(
                '/CommandsService/GetBatteryStatus',
                request_serializer=commands__pb2.Void.SerializeToString,
                response_deserializer=commands__pb2.BatteryData.FromString,
                _registered_method=True)
        self.GetGeneralInformation = channel.unary_unary(
                '/CommandsService/GetGeneralInformation',
                request_serializer=commands__pb2.Void.SerializeToString,
                response_deserializer=commands__pb2.GeneralInformationData.FromString,
                _registered_method=True)


class CommandsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraProtocols(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartCamera(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopCamera(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetUdp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGpsCoordinates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProcessorStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBatteryStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGeneralInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommandsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=commands__pb2.Void.FromString,
                    response_serializer=commands__pb2.Void.SerializeToString,
            ),
            'GetCameraProtocols': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraProtocols,
                    request_deserializer=commands__pb2.Void.FromString,
                    response_serializer=commands__pb2.SupportedStreamsReply.SerializeToString,
            ),
            'StartCamera': grpc.unary_unary_rpc_method_handler(
                    servicer.StartCamera,
                    request_deserializer=commands__pb2.CamStreamStartRequest.FromString,
                    response_serializer=commands__pb2.CamStreamPort.SerializeToString,
            ),
            'StopCamera': grpc.unary_unary_rpc_method_handler(
                    servicer.StopCamera,
                    request_deserializer=commands__pb2.CamStreamPort.FromString,
                    response_serializer=commands__pb2.Void.SerializeToString,
            ),
            'ResetUdp': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetUdp,
                    request_deserializer=commands__pb2.Void.FromString,
                    response_serializer=commands__pb2.Void.SerializeToString,
            ),
            'GetGpsCoordinates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGpsCoordinates,
                    request_deserializer=commands__pb2.Void.FromString,
                    response_serializer=commands__pb2.GpsCoordinates.SerializeToString,
            ),
            'GetProcessorStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProcessorStatus,
                    request_deserializer=commands__pb2.Void.FromString,
                    response_serializer=commands__pb2.ProcessorData.SerializeToString,
            ),
            'GetBatteryStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBatteryStatus,
                    request_deserializer=commands__pb2.Void.FromString,
                    response_serializer=commands__pb2.BatteryData.SerializeToString,
            ),
            'GetGeneralInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGeneralInformation,
                    request_deserializer=commands__pb2.Void.FromString,
                    response_serializer=commands__pb2.GeneralInformationData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CommandsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('CommandsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CommandsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/Heartbeat',
            commands__pb2.Void.SerializeToString,
            commands__pb2.Void.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCameraProtocols(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/GetCameraProtocols',
            commands__pb2.Void.SerializeToString,
            commands__pb2.SupportedStreamsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartCamera(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/StartCamera',
            commands__pb2.CamStreamStartRequest.SerializeToString,
            commands__pb2.CamStreamPort.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopCamera(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/StopCamera',
            commands__pb2.CamStreamPort.SerializeToString,
            commands__pb2.Void.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetUdp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/ResetUdp',
            commands__pb2.Void.SerializeToString,
            commands__pb2.Void.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGpsCoordinates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/GetGpsCoordinates',
            commands__pb2.Void.SerializeToString,
            commands__pb2.GpsCoordinates.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProcessorStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/GetProcessorStatus',
            commands__pb2.Void.SerializeToString,
            commands__pb2.ProcessorData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBatteryStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/GetBatteryStatus',
            commands__pb2.Void.SerializeToString,
            commands__pb2.BatteryData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGeneralInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/CommandsService/GetGeneralInformation',
            commands__pb2.Void.SerializeToString,
            commands__pb2.GeneralInformationData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
